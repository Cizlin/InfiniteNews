/*******************
 backend/jobs.config
 *******************

 'backend/jobs.config' is a Velo configuration file that lets you schedule code to run repeatedly at specified intervals. 

 Using scheduled jobs you can run backend code without any user interaction. For example, you could generate a weekly 
 report or run nightly data cleansing.

 You schedule code to run by creating a job.
 Each job defines which function to run and when to run it.

 ---
 More about Scheduled Jobs: 
 https://support.wix.com/en/article/velo-scheduling-recurring-jobs

*******************/

// The following code is an example of a job. Adapt the code for your specific use case.
{
    "jobs": [
    {
        "functionLocation": "/CustomizationAutomationFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "importEmblemPaletteImages",
        "description": "Emblem Palette Image Ingestion", // Optional
        "executionConfig": {
            "cronExpression": "38 * * * *"
        }
    },
    {
        "functionLocation": "/CustomizationAutomationFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "armorImport",
        "description": "Customization Ingestion", // Optional
        "executionConfig": {
            "cronExpression": "5 15,18 * * *" // DST
            //"cronExpression": "5 16,19 * * *" // No DST
        }
    },
    {
        "functionLocation": "/CustomizationAutomationFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "weaponImport",
        "description": "Customization Ingestion", // Optional
        "executionConfig": {
            "cronExpression": "12 15,18 * * *" // DST
            //"cronExpression": "12 16,19 * * *" // No DST
        }
    },
    {
        "functionLocation": "/CustomizationAutomationFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "vehicleImport",
        "description": "Customization Ingestion", // Optional
        "executionConfig": {
            "cronExpression": "18 15,18 * * *" // DST
            //"cronExpression": "18 16,19 * * *" // No DST
        }
    },
    {
        "functionLocation": "/CustomizationAutomationFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "bodyAiImport",
        "description": "Customization Ingestion", // Optional
        "executionConfig": {
            "cronExpression": "24 15,18 * * *" // DST
            //"cronExpression": "24 16,19 * * *" // No DST
        }
    },
    {
        "functionLocation": "/CustomizationAutomationFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "spartanIdImport",
        "description": "Customization Ingestion", // Optional
        "executionConfig": {
            "cronExpression": "26 15,18 * * *" // DST
            //"cronExpression": "26 16,19 * * *" // No DST
        }
    },
    {
        "functionLocation": "/MediaManagerFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "generateFolderDict",
        "description": "Folder Dict Generation", // Optional
        "executionConfig": {
            "cronExpression": "50 * * * *" // Set a recurrence of no less than 1 hour
            // Read about Cron expressions: [https://en.wikipedia.org/wiki/Cron#CRON_expression]
        }
    },
    {
        "functionLocation": "/MediaManagerFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "generateEmblemPaletteFolderDict",
        "description": "Folder Dict Generation", // Optional
        "executionConfig": {
            "cronExpression": "45 * * * *" // Set a recurrence of no less than 1 hour
            // Read about Cron expressions: [https://en.wikipedia.org/wiki/Cron#CRON_expression]
        }
    },
    {
        "functionLocation": "/ShopAutomationFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "refreshShop",
        "description": "Shop Automation", // Optional
        "executionConfig": {
            //"cronExpression": "0 18 * * *" // No DST
            "cronExpression": "0 17 * * *" // DST
        }
    },
    {
        "functionLocation": "/WaypointBackendFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "refreshCapstoneChallenge",
        "description": "Capstone Challenge Automation; MUST EXECUTE AFTER PASS UPDATE ON SEASON START", // Optional
        "executionConfig": {
            //"cronExpression": "7 18 * * 2" // No DST
            "cronExpression": "2 18 * * 2" // DST
        }
    },
    {
        "functionLocation": "/WaypointBackendFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "importPasses",
        "description": "Pass Update Automation; MUST EXECUTE BEFORE CAPSTONE CHALLENGE REFRESH ON SEASON START", // Optional
        "executionConfig": {
            //"cronExpression": "2 18 * * *" // No DST
            "cronExpression": "0 18 * * *" // DST
        }
    },
    {
        "functionLocation": "/TwitchApiFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "addAndUpdateTwitchDrops",
        "description": "Twitch Drop Detector", // Optional
        "executionConfig": {
            "cronExpression": "1 * * * *"
        }
    },
    {
        "functionLocation": "/TwitchApiFunctions.jsw", // Relatively to Backend folder, started by slash
        "functionName": "sendUpcomingNotifications",
        "description": "Early Warning Twitch Drop Notifier", // Optional
        "executionConfig": {
            "cronExpression": "55 * * * *"
        }
    }]
}
